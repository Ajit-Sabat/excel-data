#!/usr/bin/python

###########################################################
#
# This python script is used for mysql database backup
# using mysqldump and tar utility.
#
# Written by : Rahul Kumar
# Website: http://tecadmin.net
# Created date: Dec 03, 2013
# Last modified: Aug 17, 2018
# Tested with : Python 2.7.15 & Python 3.5
# Script Revision: 1.4
#
##########################################################

# Import required python libraries

import os
import time
import datetime
import pipes
from pipes import quote
import mysql.connector
#import pandas as pd



# MySQL database details to which backup to be done. Make sure below user having enough privileges to take databases backup.
# To take multiple databases backup, create any file like /backup/dbnames.txt and put databases names one on each line and assigned to DB_NAME variable.


DB_HOST = '172.16.11.240'
DB_USER = 'root'
DB_USER_PASSWORD = 'AND@123'
#DB_NAME = '/backup/dbnameslist.txt'
# DB_NAME = 'db_name_to_backup'
# BACKUP_PATH = '/backup/dbbackup'

database=mysql.connector.connect(
    host=DB_HOST,
    user=DB_USER,
    password=DB_USER_PASSWORD
)

mycursor=database.cursor()
mycursor.execute("SHOW DATABASES")
db_list=mycursor.fetchmany(4)

# db_list=[]
# for i in result:
#     data=i
#     db_list.append(i)
#     db_name=str(i)
#     db_name2=str(db_name)
#     list_db=str(db_name2.strip("(),''"))
# print(list_db)

with open("D:\\Process Dump\\DataBase_dump\\db_names.txt", 'w') as file:
    for row in db_list:
        s = " ".join(map(str, row))
        file.write(s + '\n')
    file.close()


# with open("D:\\Process Dump\\DataBase_dump\\file.txt", 'w') as output:
#     for row in db_list:
#         output.write(str(row) + '\n')
#     output.close()



with open('D:\\Process Dump\\DataBase_dump\\db_names.txt') as db_names:
    for data in db_names:
        #DB_NAME1="accentiv_edenred"
        DB_NAME=data.replace("\n","")
        DB_LIST='D:\\Process Dump\\DataBase_dump\\db_names.txt'
        BACKUP_PATH = ('D:\\Process Dump\\DataBase_dump')


        ##Getting current DateTime to create the separate backup folder like "20180817-123433".

        DATETIME = time.strftime('%Y%m%d-%H%M')
        TODAYBACKUPPATH = BACKUP_PATH +"\\"+ DB_NAME+"_"f"{DATETIME}"
        print(TODAYBACKUPPATH)
        ##Checking if backup folder already exists or not. If not exists will create it.
        try:
            os.stat(TODAYBACKUPPATH)
        except:
            os.mkdir(TODAYBACKUPPATH)

        # Code for checking if you want to take single database backup or assinged multiple backups in DB_NAME.
print ("checking for databases names file.")
if os.path.exists(DB_LIST):
    file1 = open(DB_LIST)
    multi = 1
    print ("Databases file found...")
    print ("Starting backup of all dbs listed in file " + DB_LIST)
else:
    print ("Databases file not found...")
    print ("Starting backup of database " + DB_LIST)
    multi = 0

# Starting actual database backup process.
if os.path.exists(DB_LIST):
   in_file = open(DB_LIST,"r")
   flength = len(in_file.readlines())
   print(flength)
   in_file.close()
   p = 1
   dbfile = open(DB_LIST,"r")

   while p <= flength:
       db = dbfile.readline()   # reading database name from file
       #db = db[:-1]         # deletes extra line
       dumpcmd = "mysqldump -h " + DB_HOST + " -u " + DB_USER + " -p" + DB_USER_PASSWORD + " " + db + " > " + pipes.quote(TODAYBACKUPPATH) + "/"+db + ".sql"
       #os.system(dumpcmd)

       os.system("start /wait cmd /c {dumpcmd}")

       gzipcmd = "gzip"+ pipes.quote(TODAYBACKUPPATH) + "/" + db + ".sql"
       os.system(f"start /wait cmd /c {gzipcmd}")
       time.sleep(10)
       p = p + 1
   dbfile.close()
   time.sleep(2)
else:
   db = DB_NAME
   dumpcmd = "mysqldump -h " + DB_HOST + " -u " + DB_USER + " -p" + DB_USER_PASSWORD + " " + db + " > " + pipes.quote(TODAYBACKUPPATH) + "/" + db + ".sql"
   os.system("start /wait cmd /c {dumpcmd}")
   gzipcmd = "gzip"+ pipes.quote(TODAYBACKUPPATH) + "/" + db + ".sql"
   os.system(f"start /wait cmd /c {gzipcmd}")

print ("")
print ("Backup script completed")
print ("Your backups have been created in '" + TODAYBACKUPPATH + "' directory")